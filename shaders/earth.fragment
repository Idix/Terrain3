#version 330

in vec2 vVaryingTexCoords;
in vec3 vVaryingNormal;
in vec3 vVaryingLightDir;
out vec4 vFragColor;

uniform vec3 specularColor;

uniform sampler2D colorMap;
uniform sampler2D nightColorMap;
uniform sampler2D specularMap;
uniform sampler2D cloudMap;

void main(void)
{
    float intensity = max(0.0, dot(normalize(vVaryingNormal), normalize(vVaryingLightDir)));
    //intensity = smoothstep(0.0, 1.0, intensity);
    vFragColor =  texture(colorMap, vVaryingTexCoords) * intensity;
    //vFragColor.b *= 1.15;

    vFragColor += texture(nightColorMap, vVaryingTexCoords) * (1.0-intensity) * 0.30;

    vec3 vReflection = normalize(reflect(-normalize(vVaryingLightDir), normalize(vVaryingNormal)));
    float spec = max(0.0, dot(vec3(0.0, 0.0, 1.0), vReflection)) * (1.0-texture(specularMap, vVaryingTexCoords).r);

    if(intensity != 0.0 && spec != 0.0) {
		float fSpec = pow(spec, 128);
		vFragColor.rgb += specularColor * fSpec;
    }

    vFragColor.rgb *= 1.0-texture(cloudMap, vVaryingTexCoords).r;
    vFragColor.a = 1.0;
}
